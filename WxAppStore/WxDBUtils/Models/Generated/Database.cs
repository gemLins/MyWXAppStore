




















// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `ZergDB`
//     Provider:               `MySql.Data.MySqlClient`
//     Connection String:      `Server=192.168.10.43;Database=cnnho_wollo;Uid=root;Pwd=admin;charset=utf8;pooling=true;`
//     Schema:                 ``
//     Include Views:          `False`



using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace ZergDB
{

	public partial class ZergDBDB : Database
	{
		public ZergDBDB() 
			: base("ZergDB")
		{
			CommonConstruct();
		}

		public ZergDBDB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			ZergDBDB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static ZergDBDB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new ZergDBDB();
        }

		[ThreadStatic] static ZergDBDB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        

		public class Record<T> where T:new()
		{
			public static ZergDBDB repo { get { return ZergDBDB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }

			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }

			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }

		}

	}
	



    

	[TableName("cnnho_wollo.airplane")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class airplane : ZergDBDB.Record<airplane>  
    {



		[Column] public int id { get; set; }





		[Column] public string airno { get; set; }





		[Column] public int? time { get; set; }





		[Column] public double? price { get; set; }





		[Column] public int? takeid { get; set; }





		[Column] public int? landid { get; set; }



	}

    

	[TableName("cnnho_wollo.airport")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class airport : ZergDBDB.Record<airport>  
    {



		[Column] public int id { get; set; }





		[Column] public string portname { get; set; }





		[Column] public string cityname { get; set; }



	}

    

	[TableName("cnnho_wollo.banner")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class banner : ZergDBDB.Record<banner>  
    {



		[Column] public int id { get; set; }





		[Column] public string name { get; set; }





		[Column] public string description { get; set; }





		[Column] public DateTime? delete_time { get; set; }





		[Column] public DateTime? update_time { get; set; }



	}

    

	[TableName("cnnho_wollo.banner_item")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class banner_item : ZergDBDB.Record<banner_item>  
    {



		[Column] public int id { get; set; }





		[Column] public int img_id { get; set; }





		[Column] public string key_word { get; set; }





		[Column] public sbyte type { get; set; }





		[Column] public DateTime? delete_time { get; set; }





		[Column] public int banner_id { get; set; }





		[Column] public DateTime? update_time { get; set; }



	}

    

	[TableName("cnnho_wollo.category")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class category : ZergDBDB.Record<category>  
    {



		[Column] public int id { get; set; }





		[Column] public string name { get; set; }





		[Column] public int? topic_img_id { get; set; }





		[Column] public int? delete_time { get; set; }





		[Column] public string description { get; set; }





		[Column] public int? update_time { get; set; }



	}

    

	[TableName("cnnho_wollo.flower")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class flower : ZergDBDB.Record<flower>  
    {



		[Column] public int id { get; set; }





		[Column] public string name { get; set; }





		[Column] public float price { get; set; }





		[Column] public string production { get; set; }



	}

    

	[TableName("cnnho_wollo.image")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class image : ZergDBDB.Record<image>  
    {



		[Column] public int id { get; set; }





		[Column] public string url { get; set; }





		[Column] public sbyte from { get; set; }





		[Column] public DateTime? delete_time { get; set; }





		[Column] public DateTime? update_time { get; set; }



	}

    

	[TableName("cnnho_wollo.menu")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class menu : ZergDBDB.Record<menu>  
    {



		[Column] public int id { get; set; }





		[Column] public string name { get; set; }





		[Column] public int? pid { get; set; }



	}

    

	[TableName("cnnho_wollo.order")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class order : ZergDBDB.Record<order>  
    {



		[Column] public int id { get; set; }





		[Column] public string order_no { get; set; }





		[Column] public int user_id { get; set; }





		[Column] public DateTime? delete_time { get; set; }





		[Column] public DateTime? create_time { get; set; }





		[Column] public decimal total_price { get; set; }





		[Column] public sbyte status { get; set; }





		[Column] public string snap_img { get; set; }





		[Column] public string snap_name { get; set; }





		[Column] public int total_count { get; set; }





		[Column] public DateTime? update_time { get; set; }





		[Column] public string snap_items { get; set; }





		[Column] public string snap_address { get; set; }





		[Column] public string prepay_id { get; set; }



	}

    

	[TableName("cnnho_wollo.order_product")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class order_product : ZergDBDB.Record<order_product>  
    {



		[Column] public int id { get; set; }





		[Column] public int order_id { get; set; }





		[Column] public int product_id { get; set; }





		[Column] public int count { get; set; }





		[Column] public DateTime? delete_time { get; set; }





		[Column] public DateTime? update_time { get; set; }



	}

    

	[TableName("cnnho_wollo.people")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class person : ZergDBDB.Record<person>  
    {



		[Column] public int id { get; set; }





		[Column] public string name { get; set; }





		[Column] public int? age { get; set; }



	}

    

	[TableName("cnnho_wollo.product")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class product : ZergDBDB.Record<product>  
    {



		[Column] public int id { get; set; }





		[Column] public string name { get; set; }





		[Column] public decimal price { get; set; }





		[Column] public int stock { get; set; }





		[Column] public DateTime? delete_time { get; set; }





		[Column] public int? category_id { get; set; }





		[Column] public string main_img_url { get; set; }





		[Column] public sbyte from { get; set; }





		[Column] public DateTime? create_time { get; set; }





		[Column] public DateTime? update_time { get; set; }





		[Column] public string summary { get; set; }





		[Column] public int? img_id { get; set; }



	}

    

	[TableName("cnnho_wollo.product_image")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class product_image : ZergDBDB.Record<product_image>  
    {



		[Column] public int id { get; set; }





		[Column] public int img_id { get; set; }





		[Column] public DateTime? delete_time { get; set; }





		[Column] public int order { get; set; }





		[Column] public int product_id { get; set; }



	}

    

	[TableName("cnnho_wollo.product_property")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class product_property : ZergDBDB.Record<product_property>  
    {



		[Column] public int id { get; set; }





		[Column] public string name { get; set; }





		[Column] public string detail { get; set; }





		[Column] public int product_id { get; set; }





		[Column] public DateTime? delete_time { get; set; }





		[Column] public DateTime? update_time { get; set; }



	}

    

	[TableName("cnnho_wollo.t_user")]



	[PrimaryKey("uid")]




	[ExplicitColumns]

    public partial class t_user : ZergDBDB.Record<t_user>  
    {



		[Column] public int uid { get; set; }





		[Column] public string uname { get; set; }





		[Column] public string pwd { get; set; }





		[Column] public string sex { get; set; }





		[Column] public int? age { get; set; }





		[Column] public DateTime? birth { get; set; }



	}

    

	[TableName("cnnho_wollo.tb_content")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class tb_content : ZergDBDB.Record<tb_content>  
    {



		[Column] public long id { get; set; }





		[Column] public long category_id { get; set; }





		[Column] public string title { get; set; }





		[Column] public string sub_title { get; set; }





		[Column] public string title_desc { get; set; }





		[Column] public string url { get; set; }





		[Column] public string pic { get; set; }





		[Column] public string pic2 { get; set; }





		[Column] public string content { get; set; }





		[Column] public DateTime? created { get; set; }





		[Column] public DateTime? updated { get; set; }



	}

    

	[TableName("cnnho_wollo.tb_content_category")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class tb_content_category : ZergDBDB.Record<tb_content_category>  
    {



		[Column] public long id { get; set; }





		[Column] public long? parent_id { get; set; }





		[Column] public string name { get; set; }





		[Column] public int? status { get; set; }





		[Column] public int? sort_order { get; set; }





		[Column] public sbyte? is_parent { get; set; }





		[Column] public DateTime? created { get; set; }





		[Column] public DateTime? updated { get; set; }



	}

    

	[TableName("cnnho_wollo.tb_item")]



	[PrimaryKey("id", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class tb_item : ZergDBDB.Record<tb_item>  
    {



		[Column] public long id { get; set; }





		[Column] public string title { get; set; }





		[Column] public string sell_point { get; set; }





		[Column] public long price { get; set; }





		[Column] public int num { get; set; }





		[Column] public string barcode { get; set; }





		[Column] public string image { get; set; }





		[Column] public long cid { get; set; }





		[Column] public sbyte status { get; set; }





		[Column] public DateTime created { get; set; }





		[Column] public DateTime updated { get; set; }



	}

    

	[TableName("cnnho_wollo.tb_item_cat")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class tb_item_cat : ZergDBDB.Record<tb_item_cat>  
    {



		[Column] public long id { get; set; }





		[Column] public long? parent_id { get; set; }





		[Column] public string name { get; set; }





		[Column] public int? status { get; set; }





		[Column] public int? sort_order { get; set; }





		[Column] public sbyte? is_parent { get; set; }





		[Column] public DateTime? created { get; set; }





		[Column] public DateTime? updated { get; set; }



	}

    

	[TableName("cnnho_wollo.tb_item_desc")]



	[PrimaryKey("item_id", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class tb_item_desc : ZergDBDB.Record<tb_item_desc>  
    {



		[Column] public long item_id { get; set; }





		[Column] public string item_desc { get; set; }





		[Column] public DateTime? created { get; set; }





		[Column] public DateTime? updated { get; set; }



	}

    

	[TableName("cnnho_wollo.tb_item_param")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class tb_item_param : ZergDBDB.Record<tb_item_param>  
    {



		[Column] public long id { get; set; }





		[Column] public long? item_cat_id { get; set; }





		[Column] public string param_data { get; set; }





		[Column] public DateTime? created { get; set; }





		[Column] public DateTime? updated { get; set; }



	}

    

	[TableName("cnnho_wollo.tb_item_param_item")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class tb_item_param_item : ZergDBDB.Record<tb_item_param_item>  
    {



		[Column] public long id { get; set; }





		[Column] public long? item_id { get; set; }





		[Column] public string param_data { get; set; }





		[Column] public DateTime? created { get; set; }





		[Column] public DateTime? updated { get; set; }



	}

    

	[TableName("cnnho_wollo.tb_order")]



	[PrimaryKey("order_id", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class tb_order : ZergDBDB.Record<tb_order>  
    {



		[Column] public string order_id { get; set; }





		[Column] public string payment { get; set; }





		[Column] public int? payment_type { get; set; }





		[Column] public string post_fee { get; set; }





		[Column] public int? status { get; set; }





		[Column] public DateTime? create_time { get; set; }





		[Column] public DateTime? update_time { get; set; }





		[Column] public DateTime? payment_time { get; set; }





		[Column] public DateTime? consign_time { get; set; }





		[Column] public DateTime? end_time { get; set; }





		[Column] public DateTime? close_time { get; set; }





		[Column] public string shipping_name { get; set; }





		[Column] public string shipping_code { get; set; }





		[Column] public long? user_id { get; set; }





		[Column] public string buyer_message { get; set; }





		[Column] public string buyer_nick { get; set; }





		[Column] public int? buyer_rate { get; set; }



	}

    

	[TableName("cnnho_wollo.tb_order_item")]



	[PrimaryKey("id", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class tb_order_item : ZergDBDB.Record<tb_order_item>  
    {



		[Column] public string id { get; set; }





		[Column] public string item_id { get; set; }





		[Column] public string order_id { get; set; }





		[Column] public int? num { get; set; }





		[Column] public string title { get; set; }





		[Column] public long? price { get; set; }





		[Column] public long? total_fee { get; set; }





		[Column] public string pic_path { get; set; }



	}

    

	[TableName("cnnho_wollo.tb_order_shipping")]



	[PrimaryKey("order_id", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class tb_order_shipping : ZergDBDB.Record<tb_order_shipping>  
    {



		[Column] public string order_id { get; set; }





		[Column] public string receiver_name { get; set; }





		[Column] public string receiver_phone { get; set; }





		[Column] public string receiver_mobile { get; set; }





		[Column] public string receiver_state { get; set; }





		[Column] public string receiver_city { get; set; }





		[Column] public string receiver_district { get; set; }





		[Column] public string receiver_address { get; set; }





		[Column] public string receiver_zip { get; set; }





		[Column] public DateTime? created { get; set; }





		[Column] public DateTime? updated { get; set; }



	}

    

	[TableName("cnnho_wollo.tb_user")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class tb_user : ZergDBDB.Record<tb_user>  
    {



		[Column] public long id { get; set; }





		[Column] public string username { get; set; }





		[Column] public string password { get; set; }





		[Column] public string phone { get; set; }





		[Column] public string email { get; set; }





		[Column] public DateTime created { get; set; }





		[Column] public DateTime updated { get; set; }



	}

    

	[TableName("cnnho_wollo.theme")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class theme : ZergDBDB.Record<theme>  
    {



		[Column] public int id { get; set; }





		[Column] public string name { get; set; }





		[Column] public string description { get; set; }





		[Column] public int topic_img_id { get; set; }





		[Column] public DateTime? delete_time { get; set; }





		[Column] public int head_img_id { get; set; }





		[Column] public DateTime? update_time { get; set; }



	}

    

	[TableName("cnnho_wollo.theme_product")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class theme_product : ZergDBDB.Record<theme_product>  
    {



		[Column] public int id { get; set; }





		[Column] public int theme_id { get; set; }





		[Column] public int product_id { get; set; }



	}

    

	[TableName("cnnho_wollo.third_app")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class third_app : ZergDBDB.Record<third_app>  
    {



		[Column] public int id { get; set; }





		[Column] public string app_id { get; set; }





		[Column] public string app_secret { get; set; }





		[Column] public string app_description { get; set; }





		[Column] public string scope { get; set; }





		[Column] public string scope_description { get; set; }





		[Column] public DateTime? delete_time { get; set; }





		[Column] public DateTime? update_time { get; set; }



	}

    

	[TableName("cnnho_wollo.user")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class user : ZergDBDB.Record<user>  
    {



		[Column] public int id { get; set; }





		[Column] public string openid { get; set; }





		[Column] public string nickname { get; set; }





		[Column] public string extend { get; set; }





		[Column] public DateTime? delete_time { get; set; }





		[Column] public DateTime? create_time { get; set; }





		[Column] public DateTime? update_time { get; set; }



	}

    

	[TableName("cnnho_wollo.user_address")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class user_address : ZergDBDB.Record<user_address>  
    {



		[Column] public int id { get; set; }





		[Column] public string name { get; set; }





		[Column] public string mobile { get; set; }





		[Column] public string province { get; set; }





		[Column] public string city { get; set; }





		[Column] public string country { get; set; }





		[Column] public string detail { get; set; }





		[Column] public DateTime? delete_time { get; set; }





		[Column] public int user_id { get; set; }





		[Column] public DateTime? update_time { get; set; }



	}


}
